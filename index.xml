<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vighnesh Tamse | DataEnthu</title>
    <link>https://vighneshtamse.github.io/</link>
    <description>Recent content on Vighnesh Tamse | DataEnthu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 02 Jul 2020 19:53:35 +0530</lastBuildDate>
    
	<atom:link href="https://vighneshtamse.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Quick Tutorial on Support Vector Machines</title>
      <link>https://vighneshtamse.github.io/post/quick-tutorial-on-support-vector-machines/</link>
      <pubDate>Thu, 02 Jul 2020 19:53:35 +0530</pubDate>
      
      <guid>https://vighneshtamse.github.io/post/quick-tutorial-on-support-vector-machines/</guid>
      <description>Support Vector Machines (SVMs) SVMs are a powerful class of supervised machines learning algorithms for both classification and regression problems. In the context of classification, they can be viewed as maximum margin linear classifiers. Why? Well, we&amp;rsquo;ll see that in a bit
The SVM uses an objective which explicitly encourages lower out-of-sample error (good generalization performance).
For the first part we will assume that the two classes are linearly separable. For non-linear boundaries, we will see that we project the data points into higher dimension so that they can be separated linearly using a plane.</description>
    </item>
    
    <item>
      <title>5 Basic Pytorch Functions</title>
      <link>https://vighneshtamse.github.io/post/basic-pytorch-functions/</link>
      <pubDate>Mon, 01 Jun 2020 12:39:50 +0530</pubDate>
      
      <guid>https://vighneshtamse.github.io/post/basic-pytorch-functions/</guid>
      <description>Basic Pytorch Tensor Functions Pytorch is a python based scientific computing package which is replacement for Numpy to use the power of GPUs and also provides maximum flexibility and speed. We will now look at 5 of the many interesting pytorch functions in this section.
 torch.from_numpy(ndarray) torch.argmax(input) torch.unsqueeze(input, dim) torch.mm(input, mat2, out=None) torch.pow(input, exponent, out=None)  # Import torch and other required modules import torch import jovian import numpy as np &amp;lt;IPython.</description>
    </item>
    
    <item>
      <title>About Me</title>
      <link>https://vighneshtamse.github.io/about/</link>
      <pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://vighneshtamse.github.io/about/</guid>
      <description>Pursuing Post Graduate Program in Data Science from Praxis Business School, Bangalore.
Interested in: Machine Learning | Natural Language Processing | Deep Learning
Know about me: Previously I have worked with Capgemini as an Associate Consultant for 2 years and 10 months. During my stint at Capgemini, I heard a lot about the Data Science field and how interesting it is, did a bit research about this field and hence decided to pursue my career in Data Science.</description>
    </item>
    
    <item>
      <title>Understanding ResNet</title>
      <link>https://vighneshtamse.github.io/post/understanding-resnet/</link>
      <pubDate>Sat, 25 Apr 2020 19:42:24 +0530</pubDate>
      
      <guid>https://vighneshtamse.github.io/post/understanding-resnet/</guid>
      <description>Deep Residual Learning for Image Recognition (ResNet) In this section we will try to understand some basic concepts related to ResNet architecture, why is it better than VGG Net, its working and its advantages.
Before trying to understand what ResNet is, first lets try to understand in short what is VGG Net and why ResNet is better than VGG Net.
Understanding VGG Net (VGG 16): VGG stands for Visual Geometry Group at Oxford University.</description>
    </item>
    
    <item>
      <title>Understanding Convolutional Neural Networks (CNN)</title>
      <link>https://vighneshtamse.github.io/post/understanding-cnn/</link>
      <pubDate>Sun, 16 Feb 2020 19:58:52 +0530</pubDate>
      
      <guid>https://vighneshtamse.github.io/post/understanding-cnn/</guid>
      <description>Understanding Convolutional Neural Networks (CNN or ConvNet) Ever wondered how does a computer understands whether an image of a dog is actually a dog? Or how does it know whether the nose of the dog is actually a nose? Well it all starts with a Convolutional Neural Network.
In this section we would understand the following things in order to understand CNNs:
 How a computer reads an image? Why don&amp;rsquo;t we use Fully Connected Neural Networks for Image Recognition?</description>
    </item>
    
  </channel>
</rss>